{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf760
{\fonttbl\f0\fnil\fcharset0 Calibri;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;\red255\green255\blue255;\red234\green234\blue234;
\red28\green76\blue144;}
{\*\expandedcolortbl;;\cssrgb\c6667\c6667\c6667;\cssrgb\c100000\c100000\c100000;\cssrgb\c93333\c93333\c93333;
\cssrgb\c13725\c38039\c63137;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid101\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww26920\viewh14000\viewkind0
\deftab720
\pard\pardeftab720\sl288\slmult1\partightenfactor0

\f0\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
1. There are two big things going on in this single line of code, which declares and initializes \cb4 maxLengths\cb3 , a dictionary that stores the maximum lengths of text fields:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl288\slmult1\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
First, there\'92s the \cb4 private\cb3  declaration. In many programming languages, \cb4 private\cb3  means \'93accessible only inside the class\'94, but {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/swift/blog/?id=5"}}{\fldrslt \cf5 \ul \ulc5 in Swift, \cb4 private\cb3  means \'93accessible only inside the source file where they\'92re defined\'94.}} Any code 
\i inside
\i0  
\b TextFieldMaxLengths.swift
\b0  has access to\'a0\cb4 maxLengths\cb3 , and any code 
\i outside
\i0  
\b TextFieldMaxLengths.swift
\b0  does 
\i not
\i0 . By\'a0putting \cb4 maxLengths\cb3 \'a0in the same file as our \cb4 UITextField\cb3  extension,\'a0we get\'a0a\'a0place where we can store the maximum lengths of text fields (remember: extensions can only add 
\i methods,
\i0  not 
\i properties
\i0 ), and by making it \cb4 private\cb3 , we keep other code from messing with it.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
Then there\'92s the matter of what to use as the key for the \cb4 maxLengths\cb3  dictionary. Swift lets you use anything that conforms to the {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/watchos/documentation/Swift/Reference/Swift_Hashable_Protocol/index.html"}}{\fldrslt \cf5 \cb4 \ul \ulc5 Hashable\cb3  protocol}} as a dictionary key, and \cb4 UITextField\cb3  does just that. It makes sense to\'a0use 
\i the text fields themselves
\i0  as the keys to the values for their maximum lengths.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \
\pard\tx720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 2. Swift {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html"}}{\fldrslt \cf5 \cb4 \ul \ulc5 extension\cb3 s}} let you add new functionality to existing \cb4 class\cb3 es, \cb4 struct\cb3 s, \cb4 enum\cb3 erations, and \cb4 protocol\cb3 s. We\'92re using an \cb4 extension\cb3  to \cb4 UITextField\cb3  to add two things:\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl288\slmult1\partightenfactor0
\ls2\ilvl0\cf2 \cb4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
maxLength\cb3 , a property that lets the programmer set and get the maximum length of a text field, and\cb1 \
\ls2\ilvl0\cb4 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u9642 	}\expnd0\expndtw0\kerning0
limitLength\cb3 , a method called whenever the contents of a text field are changed, and limits the number of characters in that text field.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \cb3 \
\pard\tx720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 3. By marking the \cb4 maxLength\cb3  property with {\field{\*\fldinst{HYPERLINK "http://nshipster.com/ibinspectable-ibdesignable/"}}{\fldrslt \cf5 \cb4 \ul \ulc5 @IBInspectable}}, we make it available to Interface Builder, which then provides an editor for its value in the Attributes Inspector.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \
\pard\tx720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 4. Get to know and love the {\field{\*\fldinst{HYPERLINK "http://ericcerney.com/swift-guard-statement/"}}{\fldrslt \cf5 \cb4 \ul \ulc5 guard}} statement and the {\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/new-syntax-swift-2-guard"}}{\fldrslt \cf5 \cb3 \ul \ulc5 \'93early return\'94 style of programming;}} you\'92re going to see a lot of it in a lot of Swift coding. Here, we\'92re using \cb4 guard\cb3  to\'a0filter out cases where no maximum length has been defined for the text field, in which case, we simply return the theoretical maximum string size.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \
\pard\tx720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 5. We use \cb4 addTarget\cb3  in \cb4 maxLength\cb3 \'91s setter to ensure that if a text field is assigned a maximum length, the \cb4 limitLength\cb3  method is called whenever the text field\'92s contents change.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \
\pard\tx720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 6. Another \cb4 guard\cb3  statement.\'a0Any case that gets past it is one where the text about to\'a0go into the text field is longer than the maximum length.\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \
\pard\tx720\pardeftab720\sl288\slmult1\partightenfactor0
\cf2 7. Cocoa sometimes likes to make things complicated. This line is the Cocoa way of saying \'93put the first \cb4 maxLength\cb3  characters of \cb4 prospectiveText\cb3  into \cb4 text\cb3 \'93. If you\'92re going to be playing with substrings, {\field{\*\fldinst{HYPERLINK "http://oleb.net/blog/2015/09/swift-ranges-and-intervals/"}}{\fldrslt \cf5 \cb3 \ul \ulc5 you need to get comfortable with \cb4 Range\cb3 s and intervals}}.}